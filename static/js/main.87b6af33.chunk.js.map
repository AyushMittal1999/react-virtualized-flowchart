{"version":3,"sources":["lib/binarySearchBounds.js","lib/intervalTree.js","helper.js","Edges.js","Diagram.js","data/data1.js","data/dataReal.js","DiagramExample.js","index.js"],"names":["binarySearchBounds","ge","a","y","c","l","h","i","m","_GEP","length","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","x","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","left","right","leftPoints","rightPoints","this","count","proto","prototype","copy","b","rebuild","node","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","push","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","apply","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","createWrapper","Object","defineProperty","get","getAddedOrRemovedItems","prevItems","nextItems","prevMap","Map","map","id","nextMap","itemsAdded","itemsRemoved","forEach","value","has","Edges","removeConnectionsAndEndpoints","arguments","undefined","connection","_this","plumbConnections","connectionEndpoints","endpoints","plumbInstance","deleteConnection","deleteEndpoint","addConnectionsAndEndpoints","edge","sourceEndpoint","addEndpoint","sourceId","isSource","anchor","paintStyle","radius","connectorPaintStyle","stroke","strokeWidth","targetEndpoint","targetId","isTarget","fill","connect","source","target","connector","curviness","cornerRadius","overlays","label","name","_this2","jsPlumb","ready","getInstance","props","containerEl","drawConnections","makeVerticesDraggable","vertices","prevProps","edges","updateConnections","updateVertices","_this3","vertex","index","draggable","stop","dragEndEvent","onAction","type","payload","vertexId","el","finalPos","_ref","_ref2","PureComponent","displayName","defaultProps","getExtremeVertices","memoizeOne","reduce","res","rightMostVertex","bottomMostVertex","top","getVisibleVertices","viewport","xIntervalTree","yIntervalTree","universalVerticesMap","v","xVerticesMap","yVerticesMap","visibleVertices","xMin","xMax","slicedToArray","set","yMin","yMax","_ref3","_ref4","addEdge","vToEMap","sourceVertexEdgeList","getViewport","scrollLeft","scrollTop","clientWidth","clientHeight","removeNode","intervalTree","intervalTreeNodes","nodeId","Diagram","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addToXIntervalTree","width","xIntervalTreeNodes","addToYIntervalTree","height","yIntervalTreeNodes","updateScroll","_throttle","setState","scroll","handleScroll","e","state","container","version","isContainerElReady","containerRef","React","createRef","initIntervalTrees","initVerticesToEdgesMap","_this$containerRef$cu","current","getBoundingClientRect","prevState","snapshot","updateIntervalTrees","_ref5","initXIntervalTree","initYIntervalTree","verticesToEdgesMap","_ref6","_this$state","_getExtremeVertices","sentinelX","sentinelY","react_default","createElement","style","position","transform","concat","Fragment","key","renderVertex","edgesMap","src_Edges","toConsumableArray","values","visibleVerticesMap","_getRelevantEdgesAndM","missedVertices","getRelevantEdgesAndMissedVertices","ref","className","onScroll","renderVertices","renderEdges","renderSentinel","X_RANGE","Y_RANGE","WIDTH_RANGE","HEIGHT_RANGE","generateRandomNumber","lower","upper","Math","floor","random","Array","VERTEX_WIDTH","VERTEX_HEIGHT","CONNECTION_LENGTH","TOTAL_VERTICES_IN_A_ROW","TOTAL_NUM_OF_ROWS","getArrangedVertices","initialState","initialVertices","objectSpread","initialEdges","split","init","reducer","action","Vertex","JSON","stringify","rootElement","document","getElementById","ReactDOM","render","_useReducer","useReducer","_useReducer2","dispatch","useCallback","src_Diagram"],"mappings":"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","file":"static/js/main.87b6af33.chunk.js","sourcesContent":["/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nfunction _GEA(a, l, h, y) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x >= y) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction _GEP(a, l, h, y, c) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) >= 0) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchGE(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _GEP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _GEA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _GTA(a, l, h, y) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x > y) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction _GTP(a, l, h, y, c) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) > 0) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchGT(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _GTP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _GTA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _LTA(a, l, h, y) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x < y) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction _LTP(a, l, h, y, c) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) < 0) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchLT(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _LTP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _LTA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _LEA(a, l, h, y) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x <= y) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction _LEP(a, l, h, y, c) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) <= 0) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchLE(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _LEP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _LEA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _EQA(a, l, h, y) {\n l - 1; //eslint-disable-line\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x === y) {\n   return m;\n  } else if (x <= y) {\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return -1;\n}\nfunction _EQP(a, l, h, y, c) {\n l - 1; //eslint-disable-line\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  var p = c(x, y);\n  if (p === 0) {\n   return m;\n  } else if (p <= 0) {\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return -1;\n}\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _EQP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _EQA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nexport default {\n ge: dispatchBsearchGE,\n gt: dispatchBsearchGT,\n lt: dispatchBsearchLT,\n le: dispatchBsearchLE,\n eq: dispatchBsearchEQ,\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\n// eslint-disable-file\n\nimport bounds from './binarySearchBounds';\n\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n this.mid = mid;\n this.left = left;\n this.right = right;\n this.leftPoints = leftPoints;\n this.rightPoints = rightPoints;\n this.count =\n   (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n a.mid = b.mid;\n a.left = b.left;\n a.right = b.right;\n a.leftPoints = b.leftPoints;\n a.rightPoints = b.rightPoints;\n a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n var ntree = createIntervalTree(intervals);\n node.mid = ntree.mid;\n node.left = ntree.left;\n node.right = ntree.right;\n node.leftPoints = ntree.leftPoints;\n node.rightPoints = ntree.rightPoints;\n node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n var intervals = node.intervals([]);\n intervals.push(interval);\n rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n var intervals = node.intervals([]);\n var idx = intervals.indexOf(interval);\n if (idx < 0) {\n  return NOT_FOUND;\n }\n intervals.splice(idx, 1);\n rebuild(node, intervals);\n return SUCCESS;\n}\n\nproto.intervals = function(result) {\n result.push.apply(result, this.leftPoints);\n if (this.left) {\n  this.left.intervals(result);\n }\n if (this.right) {\n  this.right.intervals(result);\n }\n return result;\n};\n\nproto.insert = function(interval) {\n var weight = this.count - this.leftPoints.length;\n this.count += 1;\n if (interval[1] < this.mid) {\n  if (this.left) {\n   if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n    rebuildWithInterval(this, interval);\n   } else {\n    this.left.insert(interval);\n   }\n  } else {\n   this.left = createIntervalTree([interval]);\n  }\n } else if (interval[0] > this.mid) {\n  if (this.right) {\n   if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n    rebuildWithInterval(this, interval);\n   } else {\n    this.right.insert(interval);\n   }\n  } else {\n   this.right = createIntervalTree([interval]);\n  }\n } else {\n  var l = bounds.ge(this.leftPoints, interval, compareBegin);\n  var r = bounds.ge(this.rightPoints, interval, compareEnd);\n  this.leftPoints.splice(l, 0, interval);\n  this.rightPoints.splice(r, 0, interval);\n }\n};\n\nproto.remove = function(interval) {\n var weight = this.count - this.leftPoints;\n if (interval[1] < this.mid) {\n  if (!this.left) {\n   return NOT_FOUND;\n  }\n  var rw = this.right ? this.right.count : 0;\n  if (4 * rw > 3 * (weight - 1)) {\n   return rebuildWithoutInterval(this, interval);\n  }\n  var r = this.left.remove(interval);\n  if (r === EMPTY) {\n   this.left = null;\n   this.count -= 1;\n   return SUCCESS;\n  } else if (r === SUCCESS) {\n   this.count -= 1;\n  }\n  return r;\n } else if (interval[0] > this.mid) {\n  if (!this.right) {\n   return NOT_FOUND;\n  }\n  var lw = this.left ? this.left.count : 0;\n  if (4 * lw > 3 * (weight - 1)) {\n   return rebuildWithoutInterval(this, interval);\n  }\n  var r = this.right.remove(interval);\n  if (r === EMPTY) {\n   this.right = null;\n   this.count -= 1;\n   return SUCCESS;\n  } else if (r === SUCCESS) {\n   this.count -= 1;\n  }\n  return r;\n } else {\n  if (this.count === 1) {\n   if (this.leftPoints[0] === interval) {\n    return EMPTY;\n   } else {\n    return NOT_FOUND;\n   }\n  }\n  if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n   if (this.left && this.right) {\n    var p = this;\n    var n = this.left;\n    while (n.right) {\n     p = n;\n     n = n.right;\n    }\n    if (p === this) {\n     n.right = this.right;\n    } else {\n     var l = this.left;\n     var r = this.right;\n     p.count -= n.count;\n     p.right = n.left;\n     n.left = l;\n     n.right = r;\n    }\n    copy(this, n);\n    this.count =\n      (this.left ? this.left.count : 0) +\n      (this.right ? this.right.count : 0) +\n      this.leftPoints.length;\n   } else if (this.left) {\n    copy(this, this.left);\n   } else {\n    copy(this, this.right);\n   }\n   return SUCCESS;\n  }\n  for (\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    l < this.leftPoints.length;\n    ++l\n  ) {\n   if (this.leftPoints[l][0] !== interval[0]) {\n    break;\n   }\n   if (this.leftPoints[l] === interval) {\n    this.count -= 1;\n    this.leftPoints.splice(l, 1);\n    for (\n      var r = bounds.ge(this.rightPoints, interval, compareEnd);\n      r < this.rightPoints.length;\n      ++r\n    ) {\n     if (this.rightPoints[r][1] !== interval[1]) {\n      break;\n     } else if (this.rightPoints[r] === interval) {\n      this.rightPoints.splice(r, 1);\n      return SUCCESS;\n     }\n    }\n   }\n  }\n  return NOT_FOUND;\n }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nfunction reportRange(arr, cb) {\n for (var i = 0; i < arr.length; ++i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nproto.queryPoint = function(x, cb) {\n if (x < this.mid) {\n  if (this.left) {\n   var r = this.left.queryPoint(x, cb);\n   if (r) {\n    return r;\n   }\n  }\n  return reportLeftRange(this.leftPoints, x, cb);\n } else if (x > this.mid) {\n  if (this.right) {\n   var r = this.right.queryPoint(x, cb);\n   if (r) {\n    return r;\n   }\n  }\n  return reportRightRange(this.rightPoints, x, cb);\n } else {\n  return reportRange(this.leftPoints, cb);\n }\n};\n\nproto.queryInterval = function(lo, hi, cb) {\n if (lo < this.mid && this.left) {\n  var r = this.left.queryInterval(lo, hi, cb);\n  if (r) {\n   return r;\n  }\n }\n if (hi > this.mid && this.right) {\n  var r = this.right.queryInterval(lo, hi, cb);\n  if (r) {\n   return r;\n  }\n }\n if (hi < this.mid) {\n  return reportLeftRange(this.leftPoints, hi, cb);\n } else if (lo > this.mid) {\n  return reportRightRange(this.rightPoints, lo, cb);\n } else {\n  return reportRange(this.leftPoints, cb);\n }\n};\n\nfunction compareNumbers(a, b) {\n return a - b;\n}\n\nfunction compareBegin(a, b) {\n var d = a[0] - b[0];\n if (d) {\n  return d;\n }\n return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n var d = a[1] - b[1];\n if (d) {\n  return d;\n }\n return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n if (intervals.length === 0) {\n  return null;\n }\n var pts = [];\n for (var i = 0; i < intervals.length; ++i) {\n  pts.push(intervals[i][0], intervals[i][1]);\n }\n pts.sort(compareNumbers);\n\n var mid = pts[pts.length >> 1];\n\n var leftIntervals = [];\n var rightIntervals = [];\n var centerIntervals = [];\n for (var i = 0; i < intervals.length; ++i) {\n  var s = intervals[i];\n  if (s[1] < mid) {\n   leftIntervals.push(s);\n  } else if (mid < s[0]) {\n   rightIntervals.push(s);\n  } else {\n   centerIntervals.push(s);\n  }\n }\n\n //Split center intervals\n var leftPoints = centerIntervals;\n var rightPoints = centerIntervals.slice();\n leftPoints.sort(compareBegin);\n rightPoints.sort(compareEnd);\n\n return new IntervalTreeNode(\n   mid,\n   createIntervalTree(leftIntervals),\n   createIntervalTree(rightIntervals),\n   leftPoints,\n   rightPoints,\n );\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function(interval) {\n if (this.root) {\n  this.root.insert(interval);\n } else {\n  this.root = new IntervalTreeNode(\n    interval[0],\n    null,\n    null,\n    [interval],\n    [interval],\n  );\n }\n};\n\ntproto.remove = function(interval) {\n if (this.root) {\n  var r = this.root.remove(interval);\n  if (r === EMPTY) {\n   this.root = null;\n  }\n  return r !== NOT_FOUND;\n }\n return false;\n};\n\ntproto.queryPoint = function(p, cb) {\n if (this.root) {\n  return this.root.queryPoint(p, cb);\n }\n};\n\ntproto.queryInterval = function(lo, hi, cb) {\n if (lo <= hi && this.root) {\n  return this.root.queryInterval(lo, hi, cb);\n }\n};\n\nObject.defineProperty(tproto, 'count', {\n get: function() {\n  if (this.root) {\n   return this.root.count;\n  }\n  return 0;\n },\n});\n\nObject.defineProperty(tproto, 'intervals', {\n get: function() {\n  if (this.root) {\n   return this.root.intervals([]);\n  }\n  return [];\n },\n});\n\nexport default function createWrapper(intervals) {\n if (!intervals || intervals.length === 0) {\n  return new IntervalTree(null);\n }\n return new IntervalTree(createIntervalTree(intervals));\n}","export function getAddedOrRemovedItems(prevItems, nextItems) {\n const prevMap = new Map(prevItems.map(i => [i.id, i]));\n const nextMap = new Map(nextItems.map(i => [i.id, i]));\n const itemsAdded = [];\n const itemsRemoved = [];\n\n prevMap.forEach((value, id) => {\n  if (!nextMap.has(id) || prevMap.get(id) !== nextMap.get(id)) {\n   itemsRemoved.push(value);\n  }\n });\n\n nextMap.forEach((value, id) => {\n  if (!prevMap.has(id) || prevMap.get(id) !== nextMap.get(id)) {\n   itemsAdded.push(value);\n  }\n });\n\n return {\n  itemsAdded,\n  itemsRemoved\n };\n}\n","import React, { PureComponent } from \"react\";\nimport { jsPlumb } from \"jsplumb\";\n\nimport { getAddedOrRemovedItems } from \"./helper\";\n\nclass Edges extends PureComponent {\n  componentDidMount() {\n    jsPlumb.ready(() => {\n      this.plumbInstance = jsPlumb.getInstance(this.props.containerEl);\n      this.plumbConnections = {};\n      this.drawConnections();\n      this.makeVerticesDraggable(this.props.vertices);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.edges !== this.props.edges) {\n      this.updateConnections(\n        getAddedOrRemovedItems(prevProps.edges, this.props.edges)\n      );\n    }\n    if (prevProps.vertices !== this.props.vertices) {\n      this.updateVertices(\n        getAddedOrRemovedItems(prevProps.vertices, this.props.vertices)\n      );\n    }\n  }\n\n  makeVerticesDraggable(vertices) {\n    vertices.map((vertex, index) => {\n      this.plumbInstance.draggable(vertex.id, {\n        stop: dragEndEvent => {\n          this.props.onAction({\n            type: \"ITEM_DRAGGED\",\n            payload: {\n              vertexId: dragEndEvent.el.id,\n              finalPos: dragEndEvent.finalPos,\n              index\n            }\n          });\n        }\n      });\n    });\n  }\n\n  updateConnections({ itemsAdded, itemsRemoved }) {\n    this.removeConnectionsAndEndpoints(itemsRemoved);\n    this.addConnectionsAndEndpoints(itemsAdded);\n  }\n\n  updateVertices({ itemsAdded, itemsRemoved }) {\n    this.makeVerticesDraggable(itemsAdded);\n  }\n\n  removeConnectionsAndEndpoints = (removedConnections = []) => {\n    removedConnections\n      .map(connection => this.plumbConnections[connection.id])\n      .forEach(connection => {\n        const connectionEndpoints = connection.endpoints;\n        this.plumbInstance.deleteConnection(connection);\n        this.plumbInstance.deleteEndpoint(connectionEndpoints[0]);\n        this.plumbInstance.deleteEndpoint(connectionEndpoints[1]);\n      });\n  };\n\n  addConnectionsAndEndpoints = (addedEdges = []) => {\n    addedEdges.forEach(edge => {\n      const sourceEndpoint = this.plumbInstance.addEndpoint(edge.sourceId, {\n          isSource: true,\n          anchor: \"Bottom\",\n          paintStyle: { radius: 1 },\n          connectorPaintStyle: { stroke: \"blue\", strokeWidth: 0 }\n        }),\n        targetEndpoint = this.plumbInstance.addEndpoint(edge.targetId, {\n          isTarget: true,\n          anchor: \"Top\",\n          paintStyle: { fill: \"blue\", radius: 1 },\n          connectorPaintStyle: { stroke: \"blue\", strokeWidth: 0 }\n        });\n\n      this.plumbConnections[edge.id] = this.plumbInstance.connect({\n        source: sourceEndpoint,\n        target: targetEndpoint,\n        paintStyle: { stroke: \"black\" },\n        connector: [\"Flowchart\", { curviness: 0, cornerRadius: 20 }],\n        overlays: [[\"Label\", { label: edge.name }]]\n      });\n    });\n  };\n\n  drawConnections() {\n    this.addConnectionsAndEndpoints(this.props.edges);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nEdges.displayName = \"Edges\";\nEdges.propTypes = {};\nEdges.defaultProps = {};\n\nexport default Edges;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport memoizeOne from \"memoize-one\";\nimport _throttle from \"lodash/throttle\";\n\nimport createIntervalTree from \"./lib/intervalTree\";\nimport Edges from \"./Edges\";\nimport { getAddedOrRemovedItems } from \"./helper\";\n\nconst MARGIN = 100;\n\nconst getExtremeVertices = memoizeOne(vertices => {\n  return vertices.reduce(\n    (res, vertex) => {\n      if (res.rightMostVertex.left < vertex.left) {\n        res.rightMostVertex = vertex;\n      }\n\n      if (res.bottomMostVertex.top < vertex.top) {\n        res.bottomMostVertex = vertex;\n      }\n\n      return res;\n    },\n    { rightMostVertex: { left: -1 }, bottomMostVertex: { top: -1 } }\n  );\n});\n\nconst getVisibleVertices = memoizeOne(\n  (vertices, viewport, xIntervalTree, yIntervalTree) => {\n    const universalVerticesMap = new Map(vertices.map(v => [v.id, v]));\n    const xVerticesMap = new Map();\n    const yVerticesMap = new Map();\n    const visibleVertices = new Map();\n    xIntervalTree.queryInterval(\n      viewport.xMin,\n      viewport.xMax,\n      ([low, high, vertexId]) => {\n        xVerticesMap.set(vertexId, universalVerticesMap.get(vertexId));\n      }\n    );\n    yIntervalTree.queryInterval(\n      viewport.yMin,\n      viewport.yMax,\n      ([low, high, vertexId]) => {\n        yVerticesMap.set(vertexId, universalVerticesMap.get(vertexId));\n      }\n    );\n\n    xVerticesMap.forEach((vertex, id) => {\n      if (yVerticesMap.has(id)) {\n        visibleVertices.set(id, vertex);\n      }\n    });\n\n    return visibleVertices;\n  }\n);\n\nfunction addEdge(vToEMap, edge, vertexId) {\n  let sourceVertexEdgeList = vToEMap.get(vertexId);\n  if (sourceVertexEdgeList) {\n    sourceVertexEdgeList.push(edge);\n  } else {\n    vToEMap.set(vertexId, [edge]);\n  }\n}\n\nfunction getRelevantEdgesAndMissedVertices(\n  visibleVerticesMap,\n  vToEMap,\n  vertices\n) {\n  const universalVerticesMap = new Map(vertices.map(v => [v.id, v]));\n  return [...visibleVerticesMap.values()].reduce(\n    (res, vertex) => {\n      const vEdgeList = vToEMap.get(vertex.id) || [];\n      vEdgeList.forEach(edge => {\n        res.edges.set(edge.id, edge);\n        if (!visibleVerticesMap.has(edge.sourceId)) {\n          res.missedVertices.set(\n            edge.sourceId,\n            universalVerticesMap.get(edge.sourceId)\n          );\n        }\n        if (!visibleVerticesMap.has(edge.targetId)) {\n          res.missedVertices.set(\n            edge.targetId,\n            universalVerticesMap.get(edge.targetId)\n          );\n        }\n      });\n      return res;\n    },\n    { edges: new Map(), missedVertices: new Map() }\n  );\n}\n\nconst getViewport = memoizeOne(\n  (scrollLeft, scrollTop, clientWidth, clientHeight) => ({\n    xMin: scrollLeft,\n    xMax: scrollLeft + clientWidth,\n    yMin: scrollTop,\n    yMax: scrollTop + clientHeight\n  })\n);\n\nfunction removeNode(intervalTree, intervalTreeNodes, nodeId) {\n  intervalTree.remove(intervalTreeNodes[nodeId]);\n  delete intervalTreeNodes[nodeId];\n}\n\nclass Diagram extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scroll: {\n        left: 0,\n        top: 0\n      },\n      container: {\n        height: 0,\n        width: 0\n      },\n      version: 0,\n      isContainerElReady: false\n    };\n    this.containerRef = React.createRef();\n    this.initIntervalTrees();\n    this.initVerticesToEdgesMap(props.vertices, props.edges);\n  }\n\n  componentDidMount() {\n    const { height, width } = this.containerRef.current.getBoundingClientRect();\n\n    this.setState({\n      container: {\n        height,\n        width\n      },\n      isContainerElReady: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.vertices !== this.props.vertices) {\n      this.updateIntervalTrees(\n        getAddedOrRemovedItems(prevProps.vertices, this.props.vertices)\n      );\n      this.setState(({ version }) => ({ version: version + 1 }));\n    }\n  }\n\n  addToXIntervalTree = vertex => {\n    const interval = [vertex.left, vertex.left + vertex.width, vertex.id];\n    this.xIntervalTreeNodes[vertex.id] = interval;\n    this.xIntervalTree.insert(interval);\n  };\n\n  addToYIntervalTree = vertex => {\n    const interval = [vertex.top, vertex.top + vertex.height, vertex.id];\n    this.yIntervalTreeNodes[vertex.id] = interval;\n    this.yIntervalTree.insert(interval);\n  };\n\n  initIntervalTrees() {\n    this.initXIntervalTree(this.props.vertices);\n    this.initYIntervalTree(this.props.vertices);\n  }\n\n  initXIntervalTree(vertices) {\n    this.xIntervalTree = createIntervalTree();\n    this.xIntervalTreeNodes = {};\n    vertices.forEach(this.addToXIntervalTree);\n  }\n\n  initYIntervalTree(vertices) {\n    this.yIntervalTree = createIntervalTree();\n    this.yIntervalTreeNodes = {};\n    vertices.forEach(this.addToYIntervalTree);\n  }\n\n  initVerticesToEdgesMap(vertices, edges) {\n    this.verticesToEdgesMap = edges.reduce((vToEMap, edge) => {\n      addEdge(vToEMap, edge, edge.sourceId);\n      addEdge(vToEMap, edge, edge.targetId);\n      return vToEMap;\n    }, new Map());\n  }\n\n  updateIntervalTrees({ itemsAdded, itemsRemoved }) {\n    itemsRemoved.forEach(vertex => {\n      const vertexId = vertex.id;\n      removeNode(this.xIntervalTree, this.xIntervalTreeNodes, vertexId);\n      removeNode(this.yIntervalTree, this.yIntervalTreeNodes, vertexId);\n    });\n    itemsAdded.forEach(vertex => {\n      this.addToXIntervalTree(vertex);\n      this.addToYIntervalTree(vertex);\n    });\n  }\n\n  updateScroll = _throttle(target => {\n    this.setState({\n      scroll: {\n        left: target.scrollLeft,\n        top: target.scrollTop\n      }\n    });\n  }, 0);\n\n  handleScroll = e => {\n    this.updateScroll(e.target);\n  };\n\n  getVisibleVertices() {\n    const { scroll, container } = this.state;\n\n    return getVisibleVertices(\n      this.props.vertices,\n      getViewport(scroll.left, scroll.top, container.width, container.height),\n      this.xIntervalTree,\n      this.yIntervalTree\n    );\n  }\n\n  renderSentinel() {\n    const { rightMostVertex, bottomMostVertex } = getExtremeVertices(\n      this.props.vertices\n    );\n    const sentinelX = rightMostVertex.left + rightMostVertex.width + MARGIN;\n    const sentinelY = bottomMostVertex.top + bottomMostVertex.width + MARGIN;\n\n    return (\n      <div\n        style={{\n          height: 1,\n          width: 1,\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          transform: `translate3d(${sentinelX}px, ${sentinelY}px, 0)`\n        }}\n      />\n    );\n  }\n\n  renderVertices(vertices) {\n    return vertices.map((vertex, index) => (\n      <React.Fragment key={vertex.id}>\n        {this.props.renderVertex({ vertex, index })}\n      </React.Fragment>\n    ));\n  }\n\n  renderEdges(edgesMap, vertices) {\n    if (!this.state.isContainerElReady) {\n      return null;\n    }\n\n    return (\n      <Edges\n        onAction={this.props.onAction}\n        edges={[...edgesMap.values()]}\n        vertices={vertices}\n        containerEl={this.containerRef.current}\n      />\n    );\n  }\n\n  render() {\n    const visibleVerticesMap = this.getVisibleVertices();\n    const { edges, missedVertices } = getRelevantEdgesAndMissedVertices(\n      visibleVerticesMap,\n      this.verticesToEdgesMap,\n      this.props.vertices\n    );\n    const vertices = [\n      ...visibleVerticesMap.values(),\n      ...missedVertices.values()\n    ];\n\n    return (\n      <div\n        ref={this.containerRef}\n        className=\"diagramContainer full-height\"\n        onScroll={this.handleScroll}\n      >\n        {this.renderVertices(vertices)}\n        {this.renderEdges(edges, vertices)}\n        {this.renderSentinel()}\n      </div>\n    );\n  }\n}\n\nDiagram.propTypes = {\n  vertices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      left: PropTypes.number,\n      top: PropTypes.number\n    })\n  )\n};\n\nDiagram.defaultProps = {\n  edges: []\n};\n\nexport default Diagram;\n","const X_RANGE = [0, 2000];\nconst Y_RANGE = [0, 3000];\n\nconst WIDTH_RANGE = [100, 300];\nconst HEIGHT_RANGE = [100, 300];\n\nfunction generateRandomNumber(lower, upper) {\n return Math.floor(Math.random() * (upper - lower)) + lower;\n}\n\nfunction getVertex(index) {\n const left = generateRandomNumber(X_RANGE[0], X_RANGE[1]);\n const top = generateRandomNumber(Y_RANGE[0], Y_RANGE[1]);\n const width = generateRandomNumber(WIDTH_RANGE[0], WIDTH_RANGE[1]);\n const height = generateRandomNumber(HEIGHT_RANGE[0], HEIGHT_RANGE[1]);\n\n return {\n  left,\n  top,\n  width,\n  height,\n  label: index,\n  id: index,\n }\n}\n\nconst nodes = [...Array(100)].map((a, i) => getVertex(i));\nconst connections = [];\n\nconst VERTEX_WIDTH = 250;\nconst VERTEX_HEIGHT = 250;\nconst CONNECTION_LENGTH = 25;\n\nconst TOTAL_VERTICES_IN_A_ROW = (X_RANGE[1] - X_RANGE[0]) / (VERTEX_WIDTH + CONNECTION_LENGTH);\nconst TOTAL_NUM_OF_ROWS = (Y_RANGE[1] - Y_RANGE[0]) / (VERTEX_HEIGHT + CONNECTION_LENGTH);\n\nfunction getArrangedVertices() {\n const vertices = [];\n for (let y = 0; y < TOTAL_NUM_OF_ROWS; y++) {\n  for (let x = 0; x < TOTAL_VERTICES_IN_A_ROW; x++) {\n   vertices.push({\n    left: x * (VERTEX_WIDTH + CONNECTION_LENGTH),\n    top: y * (VERTEX_HEIGHT + CONNECTION_LENGTH),\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: `${x}-${y}`,\n    id: `${x}-${y}`,\n   })\n  }\n }\n\n return vertices\n}\n\nexport const vertices = getArrangedVertices();\nexport {nodes};\nexport {connections};\n","const VERTEX_WIDTH = 200;\nconst VERTEX_HEIGHT = 200;\n\nconst vertices = [\n {\n  left: 300,\n  top: 100,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'Root',\n  id: 'r',\n },\n {\n  left: 300 - VERTEX_WIDTH,\n  top: 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'L1',\n  id: 'l1',\n },\n {\n  left: 300 + VERTEX_WIDTH,\n  top: 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'R1',\n  id: 'r1',\n },\n {\n  left: 500 - VERTEX_WIDTH,\n  top: 500 + 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'R1L2',\n  id: 'r1l2',\n },\n {\n  left: 500 + VERTEX_WIDTH,\n  top: 500 + 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'R1R2',\n  id: 'r1r2',\n },\n {\n  left: 500 + VERTEX_WIDTH - VERTEX_WIDTH,\n  top: 500 + 500 + 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'R1R2L3',\n  id: 'r1r2l3',\n },\n {\n  left: 500 + VERTEX_WIDTH + VERTEX_WIDTH,\n  top: 500 + 500 + 500,\n  width: VERTEX_WIDTH,\n  height: VERTEX_HEIGHT,\n  label: 'R1R2R3',\n  id: 'r1r2r3',\n }\n].map(vertex => ({...vertex, top: vertex.top + 1000}));\n\nconst edges = [\n {\n  id: 'r-l1',\n },\n {\n  id: 'r-r1',\n },\n {\n  id: 'r1-r1l2',\n },\n {\n  id: 'r1-r1r2',\n },\n {\n  id: 'r1r2-r1r2l3',\n },\n {\n  id: 'r1r2-r1r2r3',\n }\n].map(edge => ({ ...edge, sourceId: edge.id.split('-')[0], targetId: edge.id.split('-')[1] }));\n\nexport {vertices};\nexport {edges};","import React, { useCallback, useReducer } from \"react\";\n\nimport Diagram from \"./Diagram\";\n// import {vertices, nodes} from './data/data1';\nimport {\n  vertices as initialVertices,\n  edges as initialEdges\n} from \"./data/dataReal\";\n\nconst initialState = { initialVertices, initialEdges };\n\nfunction init({ initialVertices, initialEdges }) {\n  return { vertices: initialVertices, edges: initialEdges };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ITEM_DRAGGED\": {\n      const vertices = state.vertices.map(vertex =>\n        vertex.id === action.payload.vertexId\n          ? {\n              ...vertex,\n              left: action.payload.finalPos[0],\n              top: action.payload.finalPos[1]\n            }\n          : vertex\n      );\n      return { ...state, vertices };\n    }\n  }\n}\n\nfunction Vertex({ vertex }) {\n  return (\n    <div\n      id={vertex.id}\n      className=\"vertex\"\n      style={{\n        height: vertex.height,\n        width: vertex.width,\n        position: \"absolute\",\n        left: vertex.left,\n        top: vertex.top\n      }}\n    >\n      <span>{JSON.stringify(vertex)}</span>\n    </div>\n  );\n}\n\nexport default function DiagramExample() {\n  const [state, dispatch] = useReducer(reducer, initialState, init);\n  const renderVertex = useCallback(\n    ({ vertex }) => <Vertex vertex={vertex} />,\n    []\n  );\n\n  return (\n    <Diagram\n      onAction={dispatch}\n      vertices={state.vertices}\n      edges={state.edges}\n      renderVertex={renderVertex}\n    />\n  );\n}\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Diagram from \"./Diagram\";\nimport * as data1 from \"./data/data1\";\nimport * as data2 from \"./data/data2\";\n\nimport DiagramExample from './DiagramExample';\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [nodes, setNodes] = useState(data1.nodes);\n  const [connections, setConnections] = useState([...data1.connections]);\n  const handleAdd = useCallback(\n    () => {\n      setNodes([...nodes, ...data2.nodes]);\n      setConnections([\n        ...connections,\n        {\n          id: \"3-4\",\n          sourceId: \"3\",\n          targetId: \"4\"\n        },\n        ...data2.connections\n      ]);\n    },\n    [nodes, connections]\n  );\n  const handleDetach = useCallback(\n    () => {\n      setConnections(connections.filter(i => i.id !== \"3-4\"));\n    },\n    [connections]\n  );\n  const handleAttach = useCallback(\n    () => {\n      setConnections([\n        ...connections,\n        {\n          id: \"3-4\",\n          sourceId: \"3\",\n          targetId: \"4\"\n        }\n      ]);\n    },\n    [connections]\n  );\n\n  const handleRemove = useCallback(() => {\n    setNodes(data1.nodes);\n    setConnections(data1.connections);\n  });\n\n  const stateMachineForSubtree = useMemo(\n    () => ({\n      ss1: {\n        label: \"Add subtree to 3\",\n        next: \"ss2\",\n        handler: handleAdd\n      },\n      ss2: {\n        label: \"remove subtree\",\n        next: \"ss1\",\n        handler: handleRemove\n      }\n    }),\n    [handleAdd, handleRemove]\n  );\n  const stateMachineConnections = useMemo(\n    () => ({\n      sc1: {\n        label: \"remove 3-4 connection\",\n        next: \"sc2\",\n        handler: handleDetach\n      },\n      sc2: {\n        label: \"connect 3-4\",\n        next: \"sc1\",\n        handler: handleAttach\n      }\n    }),\n    [handleDetach, handleAttach]\n  );\n\n  const [currentState1, setCurrentState1] = useState(\"ss1\");\n  const [currentState2, setCurrentState2] = useState(\"sc1\");\n  const handleButton1Click = () => {\n    stateMachineForSubtree[currentState1].handler();\n    setCurrentState1(stateMachineForSubtree[currentState1].next);\n  };\n  const handleButton2Click = () => {\n    stateMachineConnections[currentState2].handler();\n    setCurrentState2(stateMachineConnections[currentState2].next);\n  };\n\n  return (\n    <div className=\"App\">\n      <Diagram nodes={nodes} connections={connections} />\n      <button onClick={handleButton1Click}>\n        {stateMachineForSubtree[currentState1].label}\n      </button>\n      <button onClick={handleButton2Click}>\n        {stateMachineConnections[currentState2].label}\n      </button>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<DiagramExample />, rootElement);\n"],"sourceRoot":""}