{"version":3,"sources":["lib/binarySearchBounds.js","lib/intervalTree.js","helper.js","Edges.js","Diagram.js","data/dataReal.js","DiagramExample.js","index.js"],"names":["binarySearchBounds","ge","a","y","c","l","h","i","m","_GEP","length","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","x","_EQA","NOT_FOUND","SUCCESS","IntervalTreeNode","mid","left","right","leftPoints","rightPoints","this","count","proto","prototype","copy","b","rebuild","node","intervals","ntree","createIntervalTree","rebuildWithInterval","interval","push","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","apply","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","createWrapper","Object","defineProperty","get","getAddedOrRemovedItems","prevItems","nextItems","prevMap","Map","map","id","nextMap","itemsAdded","itemsRemoved","forEach","value","has","Edges","handleStop","dragEndEvent","_this","props","onAction","type","payload","vertexEl","el","finalPos","removeConnectionsAndEndpoints","arguments","undefined","connection","plumbConnections","connectionEndpoints","endpoints","plumbInstance","deleteConnection","deleteEndpoint","addConnectionsAndEndpoints","edge","sourceEndpoint","addEndpoint","sourceId","objectSpread","sourceEndpointStyles","sourceEndpointOptions","isSource","targetEndpoint","targetId","targetEndpointStyles","targetEndpointOptions","isTarget","connect","styles","edgeStyles","options","edgeOptions","source","target","overlays","_this2","jsPlumb","ready","getInstance","containerEl","drawConnections","makeVerticesDraggable","vertices","prevProps","edges","updateConnections","updateVertices","_this3","vertex","draggable","draggablePlumbOptions","stop","_ref","_ref2","PureComponent","displayName","defaultProps","paintStyle","radius","connectorPaintStyle","stroke","strokeWidth","anchor","fill","connector","curviness","cornerRadius","getXUpper","width","getYUpper","top","height","getExtremeVertices","memoizeOne","reduce","res","rightMostVertex","bottomMostVertex","getVisibleVertices","universalVerticesMap","visibleEdgesMap","version","visibleVertices","set","getVisibleEdges","viewport","xIntervalTree","yIntervalTree","xEdgesMap","yEdgesMap","xMin","xMax","slicedToArray","yMin","yMax","_ref3","_ref4","edgeId","addEdge","vToEMap","vertexId","sourceVertexEdgeList","removeEdge","filter","presentEdge","delete","getViewport","scrollLeft","scrollTop","clientWidth","clientHeight","removeNode","intervalTree","intervalTreeNodes","nodeId","Diagram","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addToXIntervalTree","verticesMap","xIntervalTreeNodes","sourceVertex","invariant","concat","targetVertex","v1","v2","Math","min","max","makeXIntervalForEdge","addToYIntervalTree","yIntervalTreeNodes","makeYIntervalForEdge","addEdgeToVerticesToEdgesMap","verticesToEdgesMap","removeEdgeFromVerticesToEdgesMap","updateScroll","_throttle","setState","scroll","handleScroll","e","currentTarget","state","container","isContainerElReady","containerRef","React","createRef","setVertices","initVerticesToEdgesMap","initIntervalTrees","_this$containerRef$cu","current","getBoundingClientRect","prevState","snapshot","shouldTriggerRender","didVerticesChange","updateEdges","updateIntervalTrees","_ref5","v","index","getVerticesMap","initXIntervalTree","initYIntervalTree","_this4","_ref6","_this5","_ref7","_this$state","_getExtremeVertices","react_default","createElement","style","position","transform","renderBackground","_this6","_ref8","Fragment","key","renderVertex","edgesMap","src_Edges","toConsumableArray","values","visibleVerticesMap","_this$getExtremeXAndY","getExtremeXAndY","_this$getExtremeXAndY2","extremeX","extremeY","overflow","ref","className","onScroll","renderVertices","renderEdges","renderSentinel","VERTEX_WIDTH","VERTEX_HEIGHT","LEVEL1","initialState","initialVertices","label","initialEdges","split","init","reducer","action","dataset","Vertex","data-id","data-index","rootElement","document","getElementById","ReactDOM","render","_useReducer","useReducer","_useReducer2","dispatch","useCallback","src_Diagram"],"mappings":"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","file":"static/js/main.ab6ada3f.chunk.js","sourcesContent":["/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nfunction _GEA(a, l, h, y) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x >= y) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction _GEP(a, l, h, y, c) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) >= 0) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchGE(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _GEP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _GEA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _GTA(a, l, h, y) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x > y) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction _GTP(a, l, h, y, c) {\n var i = h + 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) > 0) {\n   i = m;\n   h = m - 1;\n  } else {\n   l = m + 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchGT(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _GTP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _GTA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _LTA(a, l, h, y) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x < y) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction _LTP(a, l, h, y, c) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) < 0) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchLT(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _LTP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _LTA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _LEA(a, l, h, y) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x <= y) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction _LEP(a, l, h, y, c) {\n var i = l - 1;\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (c(x, y) <= 0) {\n   i = m;\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return i;\n}\nfunction dispatchBsearchLE(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _LEP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _LEA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nfunction _EQA(a, l, h, y) {\n l - 1; //eslint-disable-line\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  if (x === y) {\n   return m;\n  } else if (x <= y) {\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return -1;\n}\nfunction _EQP(a, l, h, y, c) {\n l - 1; //eslint-disable-line\n while (l <= h) {\n  var m = (l + h) >>> 1,\n    x = a[m];\n  var p = c(x, y);\n  if (p === 0) {\n   return m;\n  } else if (p <= 0) {\n   l = m + 1;\n  } else {\n   h = m - 1;\n  }\n }\n return -1;\n}\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n if (typeof c === 'function') {\n  return _EQP(\n    a,\n    l === void 0 ? 0 : l | 0,\n    h === void 0 ? a.length - 1 : h | 0,\n    y,\n    c,\n  );\n } else {\n  return _EQA(\n    a,\n    c === void 0 ? 0 : c | 0,\n    l === void 0 ? a.length - 1 : l | 0,\n    y,\n  );\n }\n}\n\nexport default {\n ge: dispatchBsearchGE,\n gt: dispatchBsearchGT,\n lt: dispatchBsearchLT,\n le: dispatchBsearchLE,\n eq: dispatchBsearchEQ,\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\n// eslint-disable-file\n\nimport bounds from './binarySearchBounds';\n\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n this.mid = mid;\n this.left = left;\n this.right = right;\n this.leftPoints = leftPoints;\n this.rightPoints = rightPoints;\n this.count =\n   (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n a.mid = b.mid;\n a.left = b.left;\n a.right = b.right;\n a.leftPoints = b.leftPoints;\n a.rightPoints = b.rightPoints;\n a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n var ntree = createIntervalTree(intervals);\n node.mid = ntree.mid;\n node.left = ntree.left;\n node.right = ntree.right;\n node.leftPoints = ntree.leftPoints;\n node.rightPoints = ntree.rightPoints;\n node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n var intervals = node.intervals([]);\n intervals.push(interval);\n rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n var intervals = node.intervals([]);\n var idx = intervals.indexOf(interval);\n if (idx < 0) {\n  return NOT_FOUND;\n }\n intervals.splice(idx, 1);\n rebuild(node, intervals);\n return SUCCESS;\n}\n\nproto.intervals = function(result) {\n result.push.apply(result, this.leftPoints);\n if (this.left) {\n  this.left.intervals(result);\n }\n if (this.right) {\n  this.right.intervals(result);\n }\n return result;\n};\n\nproto.insert = function(interval) {\n var weight = this.count - this.leftPoints.length;\n this.count += 1;\n if (interval[1] < this.mid) {\n  if (this.left) {\n   if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n    rebuildWithInterval(this, interval);\n   } else {\n    this.left.insert(interval);\n   }\n  } else {\n   this.left = createIntervalTree([interval]);\n  }\n } else if (interval[0] > this.mid) {\n  if (this.right) {\n   if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n    rebuildWithInterval(this, interval);\n   } else {\n    this.right.insert(interval);\n   }\n  } else {\n   this.right = createIntervalTree([interval]);\n  }\n } else {\n  var l = bounds.ge(this.leftPoints, interval, compareBegin);\n  var r = bounds.ge(this.rightPoints, interval, compareEnd);\n  this.leftPoints.splice(l, 0, interval);\n  this.rightPoints.splice(r, 0, interval);\n }\n};\n\nproto.remove = function(interval) {\n var weight = this.count - this.leftPoints;\n if (interval[1] < this.mid) {\n  if (!this.left) {\n   return NOT_FOUND;\n  }\n  var rw = this.right ? this.right.count : 0;\n  if (4 * rw > 3 * (weight - 1)) {\n   return rebuildWithoutInterval(this, interval);\n  }\n  var r = this.left.remove(interval);\n  if (r === EMPTY) {\n   this.left = null;\n   this.count -= 1;\n   return SUCCESS;\n  } else if (r === SUCCESS) {\n   this.count -= 1;\n  }\n  return r;\n } else if (interval[0] > this.mid) {\n  if (!this.right) {\n   return NOT_FOUND;\n  }\n  var lw = this.left ? this.left.count : 0;\n  if (4 * lw > 3 * (weight - 1)) {\n   return rebuildWithoutInterval(this, interval);\n  }\n  var r = this.right.remove(interval);\n  if (r === EMPTY) {\n   this.right = null;\n   this.count -= 1;\n   return SUCCESS;\n  } else if (r === SUCCESS) {\n   this.count -= 1;\n  }\n  return r;\n } else {\n  if (this.count === 1) {\n   if (this.leftPoints[0] === interval) {\n    return EMPTY;\n   } else {\n    return NOT_FOUND;\n   }\n  }\n  if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n   if (this.left && this.right) {\n    var p = this;\n    var n = this.left;\n    while (n.right) {\n     p = n;\n     n = n.right;\n    }\n    if (p === this) {\n     n.right = this.right;\n    } else {\n     var l = this.left;\n     var r = this.right;\n     p.count -= n.count;\n     p.right = n.left;\n     n.left = l;\n     n.right = r;\n    }\n    copy(this, n);\n    this.count =\n      (this.left ? this.left.count : 0) +\n      (this.right ? this.right.count : 0) +\n      this.leftPoints.length;\n   } else if (this.left) {\n    copy(this, this.left);\n   } else {\n    copy(this, this.right);\n   }\n   return SUCCESS;\n  }\n  for (\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    l < this.leftPoints.length;\n    ++l\n  ) {\n   if (this.leftPoints[l][0] !== interval[0]) {\n    break;\n   }\n   if (this.leftPoints[l] === interval) {\n    this.count -= 1;\n    this.leftPoints.splice(l, 1);\n    for (\n      var r = bounds.ge(this.rightPoints, interval, compareEnd);\n      r < this.rightPoints.length;\n      ++r\n    ) {\n     if (this.rightPoints[r][1] !== interval[1]) {\n      break;\n     } else if (this.rightPoints[r] === interval) {\n      this.rightPoints.splice(r, 1);\n      return SUCCESS;\n     }\n    }\n   }\n  }\n  return NOT_FOUND;\n }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nfunction reportRange(arr, cb) {\n for (var i = 0; i < arr.length; ++i) {\n  var r = cb(arr[i]);\n  if (r) {\n   return r;\n  }\n }\n}\n\nproto.queryPoint = function(x, cb) {\n if (x < this.mid) {\n  if (this.left) {\n   var r = this.left.queryPoint(x, cb);\n   if (r) {\n    return r;\n   }\n  }\n  return reportLeftRange(this.leftPoints, x, cb);\n } else if (x > this.mid) {\n  if (this.right) {\n   var r = this.right.queryPoint(x, cb);\n   if (r) {\n    return r;\n   }\n  }\n  return reportRightRange(this.rightPoints, x, cb);\n } else {\n  return reportRange(this.leftPoints, cb);\n }\n};\n\nproto.queryInterval = function(lo, hi, cb) {\n if (lo < this.mid && this.left) {\n  var r = this.left.queryInterval(lo, hi, cb);\n  if (r) {\n   return r;\n  }\n }\n if (hi > this.mid && this.right) {\n  var r = this.right.queryInterval(lo, hi, cb);\n  if (r) {\n   return r;\n  }\n }\n if (hi < this.mid) {\n  return reportLeftRange(this.leftPoints, hi, cb);\n } else if (lo > this.mid) {\n  return reportRightRange(this.rightPoints, lo, cb);\n } else {\n  return reportRange(this.leftPoints, cb);\n }\n};\n\nfunction compareNumbers(a, b) {\n return a - b;\n}\n\nfunction compareBegin(a, b) {\n var d = a[0] - b[0];\n if (d) {\n  return d;\n }\n return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n var d = a[1] - b[1];\n if (d) {\n  return d;\n }\n return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n if (intervals.length === 0) {\n  return null;\n }\n var pts = [];\n for (var i = 0; i < intervals.length; ++i) {\n  pts.push(intervals[i][0], intervals[i][1]);\n }\n pts.sort(compareNumbers);\n\n var mid = pts[pts.length >> 1];\n\n var leftIntervals = [];\n var rightIntervals = [];\n var centerIntervals = [];\n for (var i = 0; i < intervals.length; ++i) {\n  var s = intervals[i];\n  if (s[1] < mid) {\n   leftIntervals.push(s);\n  } else if (mid < s[0]) {\n   rightIntervals.push(s);\n  } else {\n   centerIntervals.push(s);\n  }\n }\n\n //Split center intervals\n var leftPoints = centerIntervals;\n var rightPoints = centerIntervals.slice();\n leftPoints.sort(compareBegin);\n rightPoints.sort(compareEnd);\n\n return new IntervalTreeNode(\n   mid,\n   createIntervalTree(leftIntervals),\n   createIntervalTree(rightIntervals),\n   leftPoints,\n   rightPoints,\n );\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function(interval) {\n if (this.root) {\n  this.root.insert(interval);\n } else {\n  this.root = new IntervalTreeNode(\n    interval[0],\n    null,\n    null,\n    [interval],\n    [interval],\n  );\n }\n};\n\ntproto.remove = function(interval) {\n if (this.root) {\n  var r = this.root.remove(interval);\n  if (r === EMPTY) {\n   this.root = null;\n  }\n  return r !== NOT_FOUND;\n }\n return false;\n};\n\ntproto.queryPoint = function(p, cb) {\n if (this.root) {\n  return this.root.queryPoint(p, cb);\n }\n};\n\ntproto.queryInterval = function(lo, hi, cb) {\n if (lo <= hi && this.root) {\n  return this.root.queryInterval(lo, hi, cb);\n }\n};\n\nObject.defineProperty(tproto, 'count', {\n get: function() {\n  if (this.root) {\n   return this.root.count;\n  }\n  return 0;\n },\n});\n\nObject.defineProperty(tproto, 'intervals', {\n get: function() {\n  if (this.root) {\n   return this.root.intervals([]);\n  }\n  return [];\n },\n});\n\nexport default function createWrapper(intervals) {\n if (!intervals || intervals.length === 0) {\n  return new IntervalTree(null);\n }\n return new IntervalTree(createIntervalTree(intervals));\n}","export function getAddedOrRemovedItems(prevItems, nextItems) {\n const prevMap = new Map(prevItems.map(i => [i.id, i]));\n const nextMap = new Map(nextItems.map(i => [i.id, i]));\n const itemsAdded = [];\n const itemsRemoved = [];\n\n prevMap.forEach((value, id) => {\n  if (!nextMap.has(id) || prevMap.get(id) !== nextMap.get(id)) {\n   itemsRemoved.push(value);\n  }\n });\n\n nextMap.forEach((value, id) => {\n  if (!prevMap.has(id) || prevMap.get(id) !== nextMap.get(id)) {\n   itemsAdded.push(value);\n  }\n });\n\n return {\n  itemsAdded,\n  itemsRemoved\n };\n}\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsPlumb } from \"jsplumb\";\n\nimport { getAddedOrRemovedItems } from \"./helper\";\n\nclass Edges extends PureComponent {\n  componentDidMount() {\n    jsPlumb.ready(() => {\n      this.plumbInstance = jsPlumb.getInstance(this.props.containerEl);\n      this.plumbConnections = {};\n      this.drawConnections();\n      this.makeVerticesDraggable(this.props.vertices);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.edges !== this.props.edges) {\n      this.updateConnections(\n        getAddedOrRemovedItems(prevProps.edges, this.props.edges)\n      );\n    }\n    if (prevProps.vertices !== this.props.vertices) {\n      this.updateVertices(\n        getAddedOrRemovedItems(prevProps.vertices, this.props.vertices)\n      );\n    }\n  }\n\n  handleStop = dragEndEvent => {\n    this.props.onAction({\n      type: \"ITEM_DRAGGED\",\n      payload: {\n        vertexEl: dragEndEvent.el,\n        finalPos: dragEndEvent.finalPos\n      }\n    });\n  };\n\n  makeVerticesDraggable(vertices) {\n    vertices.map(vertex => {\n      this.plumbInstance.draggable(vertex.id, {\n        ...this.props.draggablePlumbOptions,\n        stop: this.handleStop\n      });\n    });\n  }\n\n  updateConnections({ itemsAdded, itemsRemoved }) {\n    this.removeConnectionsAndEndpoints(itemsRemoved);\n    this.addConnectionsAndEndpoints(itemsAdded);\n  }\n\n  updateVertices({ itemsAdded, itemsRemoved }) {\n    this.makeVerticesDraggable(itemsAdded);\n  }\n\n  removeConnectionsAndEndpoints = (removedConnections = []) => {\n    removedConnections\n      .map(connection => this.plumbConnections[connection.id])\n      .forEach(connection => {\n        const connectionEndpoints = connection.endpoints;\n        this.plumbInstance.deleteConnection(connection);\n        this.plumbInstance.deleteEndpoint(connectionEndpoints[0]);\n        this.plumbInstance.deleteEndpoint(connectionEndpoints[1]);\n      });\n  };\n\n  addConnectionsAndEndpoints = (addedEdges = []) => {\n    addedEdges.forEach(edge => {\n      const sourceEndpoint = this.plumbInstance.addEndpoint(edge.sourceId, {\n          ...(edge.sourceEndpointStyles || this.props.sourceEndpointStyles),\n          ...(edge.sourceEndpointOptions || this.props.sourceEndpointOptions),\n          isSource: true\n        }),\n        targetEndpoint = this.plumbInstance.addEndpoint(edge.targetId, {\n          ...(edge.targetEndpointStyles || this.props.targetEndpointStyles),\n          ...(edge.targetEndpointOptions || this.props.targetEndpointOptions),\n          isTarget: true\n        });\n\n      this.plumbConnections[edge.id] = this.plumbInstance.connect({\n        ...(edge.styles || this.props.edgeStyles),\n        ...(edge.options || this.props.edgeOptions),\n        source: sourceEndpoint,\n        target: targetEndpoint,\n        overlays: edge.overlays\n      });\n    });\n  };\n\n  drawConnections() {\n    this.addConnectionsAndEndpoints(this.props.edges);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nEdges.displayName = \"Edges\";\nEdges.propTypes = {\n  draggablePlumbOptions: PropTypes.shape({\n    grid: PropTypes.arrayOf(PropTypes.number)\n  })\n};\nEdges.defaultProps = {\n  sourceEndpointStyles: {\n    paintStyle: { radius: 1 },\n    connectorPaintStyle: { stroke: \"blue\", strokeWidth: 0 }\n  },\n  sourceEndpointOptions: {\n    anchor: \"Bottom\"\n  },\n  targetEndpointStyles: {\n    paintStyle: { fill: \"blue\", radius: 1 },\n    connectorPaintStyle: { stroke: \"blue\", strokeWidth: 0 }\n  },\n  targetEndpointOptions: {\n    anchor: \"Top\"\n  },\n  edgeStyles: {\n    paintStyle: { stroke: \"black\" },\n    connector: [\"Flowchart\", { curviness: 0, cornerRadius: 20 }]\n  }\n};\n\nexport default Edges;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport memoizeOne from \"memoize-one\";\nimport _throttle from \"lodash/throttle\";\nimport invariant from \"invariant\";\n\nimport createIntervalTree from \"./lib/intervalTree\";\nimport Edges from \"./Edges\";\nimport { getAddedOrRemovedItems } from \"./helper\";\n\nconst MARGIN = 100;\n\nfunction getXUpper(vertex) {\n  return (vertex.left || 0) + (vertex.width || 0);\n}\n\nfunction getYUpper(vertex) {\n  return (vertex.top || 0) + (vertex.height || 0);\n}\n\nconst getExtremeVertices = memoizeOne(vertices => {\n  return vertices.reduce(\n    (res, vertex) => {\n      if (getXUpper(res.rightMostVertex) < getXUpper(vertex)) {\n        res.rightMostVertex = vertex;\n      }\n\n      if (getYUpper(res.bottomMostVertex) < getYUpper(vertex)) {\n        res.bottomMostVertex = vertex;\n      }\n\n      return res;\n    },\n    {\n      rightMostVertex: { left: -1, width: 0 },\n      bottomMostVertex: { top: -1, height: 0 }\n    }\n  );\n});\n\nfunction getVerticesMap(vertices) {\n  return new Map(vertices.map((v, index) => [v.id, { vertex: v, index }]));\n}\n\nconst getVisibleVertices = memoizeOne(\n  (universalVerticesMap, visibleEdgesMap, version) => {\n    const visibleVertices = new Map();\n    visibleEdgesMap.forEach(edge => {\n      visibleVertices.set(\n        edge.sourceId,\n        universalVerticesMap.get(edge.sourceId)\n      );\n      visibleVertices.set(\n        edge.targetId,\n        universalVerticesMap.get(edge.targetId)\n      );\n    });\n\n    return visibleVertices;\n  }\n);\n\nconst getVisibleEdges = memoizeOne(\n  (viewport, xIntervalTree, yIntervalTree, version) => {\n    const xEdgesMap = new Map();\n    const yEdgesMap = new Map();\n    const visibleVertices = new Map();\n    xIntervalTree.queryInterval(\n      viewport.xMin,\n      viewport.xMax,\n      ([low, high, edge]) => {\n        xEdgesMap.set(edge.id, edge);\n      }\n    );\n    yIntervalTree.queryInterval(\n      viewport.yMin,\n      viewport.yMax,\n      ([low, high, edge]) => {\n        yEdgesMap.set(edge.id, edge);\n      }\n    );\n\n    xEdgesMap.forEach((edge, edgeId) => {\n      if (yEdgesMap.has(edgeId)) {\n        visibleVertices.set(edgeId, edge);\n      }\n    });\n\n    return visibleVertices;\n  }\n);\n\nfunction addEdge(vToEMap, edge, vertexId) {\n  let sourceVertexEdgeList = vToEMap.get(vertexId);\n  if (sourceVertexEdgeList) {\n    sourceVertexEdgeList.push(edge);\n  } else {\n    vToEMap.set(vertexId, [edge]);\n  }\n}\n\nfunction removeEdge(vToEMap, edgeId, vertexId) {\n  let sourceVertexEdgeList = vToEMap.get(vertexId);\n  if (sourceVertexEdgeList) {\n    sourceVertexEdgeList = sourceVertexEdgeList.filter(\n      presentEdge => presentEdge.id !== edgeId\n    );\n  }\n  if (!sourceVertexEdgeList || !sourceVertexEdgeList.length) {\n    vToEMap.delete(vertexId);\n  } else {\n    vToEMap.set(vertexId, sourceVertexEdgeList);\n  }\n}\n\nconst getViewport = memoizeOne(\n  (scrollLeft, scrollTop, clientWidth, clientHeight) => ({\n    xMin: scrollLeft,\n    xMax: scrollLeft + clientWidth,\n    yMin: scrollTop,\n    yMax: scrollTop + clientHeight\n  })\n);\n\nfunction removeNode(intervalTree, intervalTreeNodes, nodeId) {\n  if (!intervalTreeNodes[nodeId]) {\n    return;\n  }\n  intervalTree.remove(intervalTreeNodes[nodeId]);\n  delete intervalTreeNodes[nodeId];\n}\n\nfunction makeXIntervalForEdge(edge, v1, v2) {\n  const x1 = Math.min(v1.left, v2.left) || 0;\n  const x2 = Math.max(\n    (v1.left || 0) + (v1.width || 0),\n    (v2.left || 0) + (v2.width || 0)\n  );\n  return [x1, x2, edge];\n}\n\nfunction makeYIntervalForEdge(edge, v1, v2) {\n  const y1 = Math.min(v1.top, v2.top) || 0;\n  const y2 = Math.max(\n    (v1.top || 0) + (v1.height || 0),\n    (v2.top || 0) + (v2.height || 0)\n  );\n  return [y1, y2, edge];\n}\n\nclass Diagram extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scroll: {\n        left: 0,\n        top: 0\n      },\n      container: {\n        height: 0,\n        width: 0\n      },\n      version: 0,\n      isContainerElReady: false\n    };\n    this.containerRef = React.createRef();\n    const { verticesMap } = this.setVertices(props.vertices);\n    this.initVerticesToEdgesMap(props.edges);\n    this.initIntervalTrees(props.edges, verticesMap);\n  }\n\n  componentDidMount() {\n    const { height, width } = this.containerRef.current.getBoundingClientRect();\n\n    this.setState({\n      container: {\n        height,\n        width\n      },\n      isContainerElReady: true\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let shouldTriggerRender = false;\n    const didVerticesChange = prevProps.vertices !== this.props.vertices;\n    let { verticesMap, verticesToEdgesMap } = this;\n\n    if (didVerticesChange) {\n      verticesMap = this.setVertices(this.props.vertices).verticesMap;\n    }\n\n    if (prevProps.edges !== this.props.edges) {\n      verticesToEdgesMap = this.updateEdges(\n        getAddedOrRemovedItems(prevProps.edges, this.props.edges),\n        verticesMap\n      ).verticesToEdgesMap;\n      shouldTriggerRender = true;\n    }\n\n    if (didVerticesChange) {\n      this.updateIntervalTrees(\n        getAddedOrRemovedItems(prevProps.vertices, this.props.vertices),\n        verticesToEdgesMap\n      );\n      shouldTriggerRender = true;\n    }\n\n    if (shouldTriggerRender) {\n      this.setState(({ version }) => ({ version: version + 1 }));\n    }\n  }\n\n  setVertices(vertices) {\n    this.vertices = vertices;\n    this.verticesMap = getVerticesMap(vertices);\n    return { vertices: this.vertices, verticesMap: this.verticesMap };\n  }\n\n  addToXIntervalTree = (edge, verticesMap) => {\n    const edgeId = edge.id;\n    if (this.xIntervalTreeNodes[edgeId]) {\n      return;\n    }\n\n    const sourceVertex = verticesMap.get(edge.sourceId);\n    invariant(sourceVertex, `sourceVertex missing for the edgeId - ${edgeId}`);\n    const targetVertex = verticesMap.get(edge.targetId);\n    invariant(targetVertex, `targetVertex missing for the edgeId - ${edgeId}`);\n\n    const interval = makeXIntervalForEdge(\n      edge,\n      sourceVertex.vertex,\n      targetVertex.vertex\n    );\n    this.xIntervalTreeNodes[edgeId] = interval;\n    this.xIntervalTree.insert(interval);\n  };\n\n  addToYIntervalTree = (edge, verticesMap) => {\n    const edgeId = edge.id;\n\n    if (this.yIntervalTreeNodes[edgeId]) {\n      return;\n    }\n\n    const sourceVertex = verticesMap.get(edge.sourceId);\n    invariant(sourceVertex, `sourceVertex missing for the edgeId - ${edgeId}`);\n    const targetVertex = verticesMap.get(edge.targetId);\n    invariant(targetVertex, `targetVertex missing for the edgeId - ${edgeId}`);\n\n    const interval = makeYIntervalForEdge(\n      edge,\n      sourceVertex.vertex,\n      targetVertex.vertex\n    );\n\n    this.yIntervalTreeNodes[edgeId] = interval;\n    this.yIntervalTree.insert(interval);\n  };\n\n  initIntervalTrees(edges, verticesMap) {\n    this.initXIntervalTree(edges, verticesMap);\n    this.initYIntervalTree(edges, verticesMap);\n  }\n\n  initVerticesToEdgesMap(edges) {\n    this.verticesToEdgesMap = edges.reduce((vToEMap, edge) => {\n      addEdge(vToEMap, edge, edge.sourceId);\n      addEdge(vToEMap, edge, edge.targetId);\n      return vToEMap;\n    }, new Map());\n  }\n\n  addEdgeToVerticesToEdgesMap = edge => {\n    addEdge(this.verticesToEdgesMap, edge, edge.sourceId);\n    addEdge(this.verticesToEdgesMap, edge, edge.targetId);\n  };\n\n  removeEdgeFromVerticesToEdgesMap = edge => {\n    removeEdge(this.verticesToEdgesMap, edge.id, edge.sourceId);\n    removeEdge(this.verticesToEdgesMap, edge.id, edge.targetId);\n  };\n\n  initXIntervalTree(edges, verticesMap) {\n    this.xIntervalTree = createIntervalTree();\n    this.xIntervalTreeNodes = {};\n    edges.forEach(edge => this.addToXIntervalTree(edge, verticesMap));\n  }\n\n  initYIntervalTree(edges, verticesMap) {\n    this.yIntervalTree = createIntervalTree();\n    this.yIntervalTreeNodes = {};\n    edges.forEach(edge => this.addToYIntervalTree(edge, verticesMap));\n  }\n\n  updateIntervalTrees({ itemsAdded, itemsRemoved }, verticesToEdgesMap) {\n    itemsRemoved.forEach(vertex => {\n      const vertexId = vertex.id;\n      const edges = verticesToEdgesMap.get(vertexId) || [];\n      edges.forEach(edge => {\n        removeNode(this.xIntervalTree, this.xIntervalTreeNodes, edge.id);\n        removeNode(this.yIntervalTree, this.yIntervalTreeNodes, edge.id);\n      });\n    });\n    itemsAdded.forEach(vertex => {\n      const edges = verticesToEdgesMap.get(vertex.id);\n      const { verticesMap } = this;\n      edges.forEach(edge => {\n        this.addToXIntervalTree(edge, verticesMap);\n        this.addToYIntervalTree(edge, verticesMap);\n      });\n    });\n  }\n\n  updateEdges({ itemsAdded, itemsRemoved }, verticesMap) {\n    itemsRemoved.forEach(edge => {\n      const edgeId = edge.id;\n      this.removeEdgeFromVerticesToEdgesMap(edge);\n      removeNode(this.xIntervalTree, this.xIntervalTreeNodes, edgeId);\n      removeNode(this.yIntervalTree, this.yIntervalTreeNodes, edgeId);\n    });\n    itemsAdded.forEach(edge => {\n      this.addEdgeToVerticesToEdgesMap(edge);\n      this.addToXIntervalTree(edge, verticesMap);\n      this.addToYIntervalTree(edge, verticesMap);\n    });\n\n    return { verticesToEdgesMap: this.verticesToEdgesMap };\n  }\n\n  updateScroll = _throttle(target => {\n    this.setState({\n      scroll: {\n        left: target.scrollLeft,\n        top: target.scrollTop\n      }\n    });\n  }, 0);\n\n  handleScroll = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    this.updateScroll(e.currentTarget);\n  };\n\n  getVisibleEdges() {\n    const { scroll, container, version } = this.state;\n\n    return getVisibleEdges(\n      getViewport(scroll.left, scroll.top, container.width, container.height),\n      this.xIntervalTree,\n      this.yIntervalTree,\n      version\n    );\n  }\n\n  getVisibleVertices() {\n    const { version } = this.state;\n\n    return getVisibleVertices(\n      this.verticesMap,\n      this.getVisibleEdges(),\n      version\n    );\n  }\n\n  getExtremeXAndY() {\n    const { rightMostVertex, bottomMostVertex } = getExtremeVertices(\n      this.vertices\n    );\n\n    const sentinelX = getXUpper(rightMostVertex) + MARGIN;\n    const sentinelY = getYUpper(bottomMostVertex) + MARGIN;\n\n    return [sentinelX, sentinelY];\n  }\n\n  renderSentinel(x, y) {\n    return (\n      <div\n        style={{\n          height: 1,\n          width: 1,\n          position: \"absolute\",\n          left: 0,\n          top: 0,\n          transform: `translate3d(${x}px, ${y}px, 0)`\n        }}\n      />\n    );\n  }\n\n  renderBackground(x, y) {\n    return this.props.renderBackground(x, y);\n  }\n\n  renderVertices(vertices) {\n    return vertices.map(({ vertex, index }) => (\n      <React.Fragment key={vertex.id}>\n        {this.props.renderVertex({ vertex, index })}\n      </React.Fragment>\n    ));\n  }\n\n  renderEdges(edgesMap, vertices) {\n    if (!this.state.isContainerElReady) {\n      return null;\n    }\n\n    return (\n      <Edges\n        onAction={this.props.onAction}\n        edges={[...edgesMap.values()]}\n        vertices={vertices.map(v => v.vertex)}\n        containerEl={this.containerRef.current}\n        sourceEndpointStyles={this.props.sourceEndpointStyles}\n        sourceEndpointOptions={this.props.sourceEndpointOptions}\n        targetEndpointStyles={this.props.targetEndpointStyles}\n        targetEndpointOptions={this.props.targetEndpointOptions}\n        edgeStyles={this.props.edgeStyles}\n        draggablePlumbOptions={this.props.draggablePlumbOptions}\n      />\n    );\n  }\n\n  render() {\n    const visibleVerticesMap = this.getVisibleVertices();\n    const edges = this.getVisibleEdges();\n\n    const vertices = [...visibleVerticesMap.values()];\n    const [extremeX, extremeY] = this.getExtremeXAndY();\n\n    return (\n      <div\n        style={{ height: \"100%\", overflow: \"auto\", position: \"relative\" }}\n        ref={this.containerRef}\n        className=\"diagramContainer\"\n        onScroll={this.handleScroll}\n      >\n        {this.renderVertices(vertices)}\n        {this.renderEdges(edges, vertices)}\n        {this.renderSentinel(extremeX, extremeY)}\n        {this.renderBackground(extremeX, extremeY)}\n      </div>\n    );\n  }\n}\n\nDiagram.propTypes = {\n  vertices: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      left: PropTypes.number,\n      top: PropTypes.number\n    })\n  ),\n  draggablePlumbOptions: PropTypes.shape({\n    grid: PropTypes.arrayOf(PropTypes.number)\n  }),\n  renderBackground: PropTypes.func\n};\n\nDiagram.defaultProps = {\n  edges: [],\n  renderBackground() {\n    return null;\n  }\n};\n\nexport default Diagram;\n","const VERTEX_WIDTH = 200;\nconst VERTEX_HEIGHT = 200;\n\nconst LEVEL1 = 1500;\nconst LEVEL2 = 1500;\nconst LEVEL3 = 1500;\n\nconst vertices = [\n  {\n    left: 300,\n    top: 100,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"Root\",\n    id: \"r\"\n  },\n  {\n    left: 300 - VERTEX_WIDTH,\n    top: LEVEL1,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"L1\",\n    id: \"l1\"\n  },\n  {\n    left: 300 + VERTEX_WIDTH,\n    top: LEVEL1,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"R1\",\n    id: \"r1\"\n  },\n  {\n    left: 500 - VERTEX_WIDTH,\n    top: LEVEL1 + LEVEL2,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"R1L2\",\n    id: \"r1l2\"\n  },\n  {\n    left: 500 + VERTEX_WIDTH,\n    top: LEVEL1 + LEVEL2,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"R1R2\",\n    id: \"r1r2\"\n  },\n  {\n    left: 500 + VERTEX_WIDTH - VERTEX_WIDTH,\n    top: LEVEL1 + LEVEL2 + LEVEL3,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"R1R2L3\",\n    id: \"r1r2l3\"\n  },\n  {\n    left: 500 + VERTEX_WIDTH + VERTEX_WIDTH,\n    top: LEVEL1 + LEVEL2 + LEVEL3,\n    width: VERTEX_WIDTH,\n    height: VERTEX_HEIGHT,\n    label: \"R1R2R3\",\n    id: \"r1r2r3\"\n  }\n].map(vertex => ({ ...vertex, top: vertex.top + 1000 }));\n\nconst edges = [\n  {\n    id: \"r-l1\"\n  },\n  {\n    id: \"r-r1\"\n  },\n  {\n    id: \"r1-r1l2\"\n  },\n  {\n    id: \"r1-r1r2\"\n  },\n  {\n    id: \"r1r2-r1r2l3\"\n  },\n  {\n    id: \"r1r2-r1r2r3\"\n  }\n].map(edge => ({\n  ...edge,\n  sourceId: edge.id.split(\"-\")[0],\n  targetId: edge.id.split(\"-\")[1]\n}));\n\nexport { vertices };\nexport { edges };\n","import React, { useCallback, useReducer } from \"react\";\n\nimport Diagram from \"./Diagram\";\n// import {vertices, nodes} from './data/data1';\nimport {\n  vertices as initialVertices,\n  edges as initialEdges\n} from \"./data/dataReal\";\n\nconst initialState = { initialVertices, initialEdges };\n\nfunction init({ initialVertices, initialEdges }) {\n  return { vertices: initialVertices, edges: initialEdges };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ITEM_DRAGGED\": {\n      const vertices = state.vertices.map(vertex =>\n        vertex.id === action.payload.vertexEl.dataset.id\n          ? {\n              ...vertex,\n              left: action.payload.finalPos[0],\n              top: action.payload.finalPos[1]\n            }\n          : vertex\n      );\n      return { ...state, vertices };\n    }\n  }\n}\n\nfunction Vertex({ vertex, index }) {\n  return (\n    <div\n      id={vertex.id}\n      className=\"vertex\"\n      style={{\n        height: vertex.height,\n        width: vertex.width,\n        position: \"absolute\",\n        left: vertex.left,\n        top: vertex.top\n      }}\n      data-id={vertex.id}\n      data-index={index}\n    >\n      <span>{index}</span>\n    </div>\n  );\n}\n\nexport default function DiagramExample() {\n  const [state, dispatch] = useReducer(reducer, initialState, init);\n  const renderVertex = useCallback(\n    ({ vertex, index }) => <Vertex vertex={vertex} index={index} />,\n    []\n  );\n  const renderBackground = useCallback(\n    (x, y) => (\n      <div className=\"sq-bg\" style={{ height: `${y}px`, width: `${x}px` }} />\n    ),\n    []\n  );\n\n  return (\n    <Diagram\n      onAction={dispatch}\n      vertices={state.vertices}\n      edges={state.edges}\n      renderVertex={renderVertex}\n      renderBackground={renderBackground}\n    />\n  );\n}\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Diagram from \"./Diagram\";\nimport * as data1 from \"./data/data1\";\nimport * as data2 from \"./data/data2\";\n\nimport DiagramExample from \"./DiagramExample\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [nodes, setNodes] = useState(data1.nodes);\n  const [connections, setConnections] = useState([...data1.connections]);\n  const handleAdd = useCallback(() => {\n    setNodes([...nodes, ...data2.nodes]);\n    setConnections([\n      ...connections,\n      {\n        id: \"3-4\",\n        sourceId: \"3\",\n        targetId: \"4\"\n      },\n      ...data2.connections\n    ]);\n  }, [nodes, connections]);\n  const handleDetach = useCallback(() => {\n    setConnections(connections.filter(i => i.id !== \"3-4\"));\n  }, [connections]);\n  const handleAttach = useCallback(() => {\n    setConnections([\n      ...connections,\n      {\n        id: \"3-4\",\n        sourceId: \"3\",\n        targetId: \"4\"\n      }\n    ]);\n  }, [connections]);\n\n  const handleRemove = useCallback(() => {\n    setNodes(data1.nodes);\n    setConnections(data1.connections);\n  });\n\n  const stateMachineForSubtree = useMemo(\n    () => ({\n      ss1: {\n        label: \"Add subtree to 3\",\n        next: \"ss2\",\n        handler: handleAdd\n      },\n      ss2: {\n        label: \"remove subtree\",\n        next: \"ss1\",\n        handler: handleRemove\n      }\n    }),\n    [handleAdd, handleRemove]\n  );\n  const stateMachineConnections = useMemo(\n    () => ({\n      sc1: {\n        label: \"remove 3-4 connection\",\n        next: \"sc2\",\n        handler: handleDetach\n      },\n      sc2: {\n        label: \"connect 3-4\",\n        next: \"sc1\",\n        handler: handleAttach\n      }\n    }),\n    [handleDetach, handleAttach]\n  );\n\n  const [currentState1, setCurrentState1] = useState(\"ss1\");\n  const [currentState2, setCurrentState2] = useState(\"sc1\");\n  const handleButton1Click = () => {\n    stateMachineForSubtree[currentState1].handler();\n    setCurrentState1(stateMachineForSubtree[currentState1].next);\n  };\n  const handleButton2Click = () => {\n    stateMachineConnections[currentState2].handler();\n    setCurrentState2(stateMachineConnections[currentState2].next);\n  };\n  const renderVertex = useCallback(\n    ({ vertex }) => <Vertex vertex={vertex} />,\n    []\n  );\n\n  return (\n    <div className=\"App\">\n      <Diagram\n        vertices={nodes}\n        edges={connections}\n        renderVertex={renderVertex}\n      />\n      <button onClick={handleButton1Click}>\n        {stateMachineForSubtree[currentState1].label}\n      </button>\n      <button onClick={handleButton2Click}>\n        {stateMachineConnections[currentState2].label}\n      </button>\n    </div>\n  );\n}\n\nfunction Vertex({ vertex }) {\n  return (\n    <div\n      id={vertex.id}\n      className=\"vertex\"\n      style={{\n        height: vertex.height,\n        width: vertex.width,\n        position: \"absolute\",\n        left: vertex.left,\n        top: vertex.top\n      }}\n    >\n      <span>{vertex.label}</span>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<DiagramExample />, rootElement);\n"],"sourceRoot":""}